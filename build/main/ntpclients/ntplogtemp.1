'\" t
.\"     Title: ntplogtemp
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.12
.\"      Date: 2022-12-29
.\"    Manual: NTPsec
.\"    Source: NTPsec
.\"  Language: English
.\"
.TH "NTPLOGTEMP" "1" "2022-12-29" "NTPsec" "NTPsec"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
ntplogtemp \- log temperature data
.SH "SYNOPSIS"
.sp
.sp
.nf
ntplogtemp [\-h] [\-l LOGFILE] [\-o] [\-w WAIT] [\-v] [\-V]
.fi
.br
.sp
.if n .RS 4
.nf
.fam C
\-h, \-\-help            show this help message and exit
\-l LOGFILE, \-\-logfile LOGFILE
                      append log data to LOGFILE instead of stdout
\-q, \-\-quiet                                be quiet
\-o, \-\-once            log one line, then exit
\-w WAIT, \-\-wait WAIT  wait WAIT seconds after each log line, default 60
\-v, \-\-verbose         be verbose
\-V, \-\-version         show program\(aqs version number and exit
.fam
.fi
.if n .RE
.SH "DESCRIPTION"
.sp
ntplogtemp gathers temperature readings across a system. The standard user
is ntpuser and should have permissions to execute lm_sensors and smartctl.
.sp
The default is to write the data to stdout once every 60 seconds.
The log file looks like:
.sp
.if n .RS 4
.nf
.fam C
# time, sensor, value
1485816568 ZONE0 39.0
1485816568 ZONE1 20.0
1485816568 ZONE2 42.0
1485816568 ZONE3 0.0
.fam
.fi
.if n .RE
.sp
\f(CRTime\fP is the POSIX time of when the log line is written.
.sp
\f(CRSensor\fP is the sensor the temperature reading was obtained from.
.sp
\f(CRValue\fP is the temperature reading in celsius.
.SH "OPTIONS"
.sp
\f(CR\-h, \-\-help\fP
.RS 4
Displays usage information and exits.
.RE
.sp
\f(CR\-l LOGFILE, \-\-logfile LOGFILE\fP
.RS 4
Append log data to LOGFILE instead of stdout
.RE
.sp
\f(CR\-q, \-\-quiet\fP
.RS 4
Quiet output, will not display errors
.RE
.sp
\f(CR\-o, \-\-once\fP
.RS 4
Log the data once, then exit
.RE
.sp
\f(CR\-v, \-\-verbose\fP
.RS 4
Be verbose
.RE
.sp
\f(CR\-w WAIT, \-\-wait WAIT\fP
.RS 4
Wait WAIT seconds after each log line.  The default is 60 seconds.  The
minimum wait time is 5 seconds.
.RE
.sp
\f(CR\-V, \-\-version\fP
.RS 4
show program\(cqs version number and exit
.RE
.SH "USAGE"
.sp
\f(CRntplogtemp\fP
.RS 4
This the simplest use of this program. It can be used to check the
temperature readings of Zones, CPU, and disk drives every minute.
.RE
.sp
\f(CRntplogtemp \-l /var/log/ntpstats/temperature \-w 60 &\fP
.RS 4
This will continuously log the temperature data in the background
to the file /var/log/ntpstats/temperature.  Only log every 60 seconds.
.RE
.SH "EXIT STATUS"
.sp
One of the following exit values will be returned:
.sp
0 (EXIT_SUCCESS)
.RS 4
Successful program execution.
.RE
.sp
1 (EXIT_FAILURE)
.RS 4
The operation failed or the command syntax was not valid.
.RE
.SH "AUTHORS"
.sp
Gary E. Miller
.sp
Keane S. Wolter
.SH "EXIT STATUS"
.sp
One of the following exit values will be returned:
.sp
0 (EXIT_SUCCESS)
.RS 4
Successful program execution.
.RE
.sp
1 (EXIT_FAILURE)
.RS 4
The operation failed or the command syntax was not valid.
.RE